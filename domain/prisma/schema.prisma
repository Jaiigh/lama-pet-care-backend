generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Admin {
  AID              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  updated_at       DateTime @default(now()) @db.Timestamptz(6)
  email            String   @unique @default("")
  password         String   @default("")
  name             String   @default("")
  birthdate        DateTime @db.Date
  telephone_number String   @unique @default("") @db.VarChar(10)
  address          String   @default("")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Caretaker {
  CID                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime   @default(now()) @db.Timestamptz(6)
  email              String     @unique @default("")
  password           String     @default("")
  name               String
  birthdate          DateTime   @db.Date
  telephone_number   String     @unique @default("") @db.VarChar(10)
  address            String     @default("")
  specialties        String?
  start_working_time DateTime   @default(dbgenerated("'00:00:00'::time without time zone")) @db.Time(6)
  end_working_time   DateTime   @default(dbgenerated("'00:00:00'::time without time zone")) @db.Time(6)
  rating             Decimal?   @db.Decimal(2, 1)
  Cservice           Cservice[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Cservice {
  date      DateTime  @db.Date
  score     Int
  comment   String?
  SID       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  CID       String    @db.Uuid
  Caretaker Caretaker @relation(fields: [CID], references: [CID], onDelete: Cascade)
  Service   Service   @relation(fields: [SID], references: [SID], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Doctor {
  DID                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime   @default(now()) @db.Timestamptz(6)
  email              String     @unique @default("")
  password           String     @default("")
  name               String     @default("")
  birthdate          DateTime   @db.Date
  telephone_number   String     @unique @default("") @db.VarChar(10)
  address            String     @default("")
  license_number     String     @unique @default("")
  start_date         DateTime   @default(dbgenerated("'0001-01-01'::date")) @db.Date
  start_working_time DateTime   @default(dbgenerated("'00:00:00'::time without time zone")) @db.Time(6)
  end_working_time   DateTime   @default(dbgenerated("'00:00:00'::time without time zone")) @db.Time(6)
  Mservice           Mservice[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Medicine {
  mediname String
  SID      String  @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Service  Service @relation(fields: [SID], references: [SID], onDelete: Cascade)

  @@id([mediname, SID])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Mservice {
  appoint_time DateTime @db.Timestamp(6)
  disease      String
  SID          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  DID          String?  @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Doctor       Doctor?  @relation(fields: [DID], references: [DID], onDelete: Cascade)
  Service      Service  @relation(fields: [SID], references: [SID], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Owner {
  OID              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)
  email            String    @unique @default("")
  password         String    @default("")
  name             String    @default("")
  birthdate        DateTime  @db.Date
  telephone_number String    @unique @default("") @db.VarChar(10)
  address          String    @default("")
  total_spending   Decimal?  @db.Decimal(12, 2)
  Payment          Payment[]
  Pet              Pet[]
  Service          Service[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Payment {
  type     String?
  status   payment_status
  pay_date DateTime?      @db.Date
  PAYID    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  OID      String         @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Owner    Owner          @relation(fields: [OID], references: [OID], onDelete: Cascade)
  Service  Service[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Pet {
  breed     String?
  name      String?
  birthdate DateTime  @db.Date
  weight    Decimal   @db.Decimal(5, 2)
  kind      String
  sex       pet_sex
  OID       String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  PETID     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Owner     Owner     @relation(fields: [OID], references: [OID], onDelete: Cascade)
  Service   Service[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Service {
  price    Int
  status   service_status
  rdate    DateTime       @db.Date
  SID      String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  PETID    String         @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  PAYID    String         @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  OID      String         @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Cservice Cservice?
  Medicine Medicine[]
  Mservice Mservice?
  Owner    Owner          @relation(fields: [OID], references: [OID], onDelete: Cascade)
  Payment  Payment        @relation(fields: [PAYID], references: [PAYID], onDelete: Cascade)
  Pet      Pet            @relation(fields: [PETID], references: [PETID], onDelete: Cascade)
}

enum payment_status {
  UNPAID
  PAID
}

enum pet_sex {
  male
  female
  unknown
}

enum service_status {
  wait
  ongoing
  finish
}
